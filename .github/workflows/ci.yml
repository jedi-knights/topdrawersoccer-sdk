name: CI Soccer SDK Utils

# When this action will be executed
on:
  # Automatically trigger it when detected changes in repo
  push:
    branches:
      - 'main'
      - 'feature/*'
    paths:
      - '**'
      - '.github/workflows/ci.yml'

  # Allow manually trigger
  workflow_dispatch: {}

jobs:
  Quality:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Python "3.10.8"
        uses: actions/setup-python@v4
        with:
          python-version: "3.10.8"

      - name: Setup Poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-create: true
          virtualenvs-in-project: false
          installer-parallel: true

      - name: Install Dependencies
        run: |
          python3 -m venv .venv
          source .venv/bin/activate
          poetry config virtualenvs.in-project false
          poetry config virtualenvs.create true
          poetry config virtualenvs.path .venv
          poetry install --no-interaction --no-root

      - name: Analyze Syntax
        run: |
          source .venv/bin/activate
          poetry run invoke lint

      - name: Run Tests
        run: |
          source .venv/bin/activate
          poetry run invoke cover

      - name: Report Coverage
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.github_token }}

      - name: Test Semantic Release Version
        run: |
          source .venv/bin/activate
          poetry run invoke check-version

  Release:
    needs: Quality
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' && !contains(github.event.head_commit.message, 'chore(release):')
    runs-on: ubuntu-latest
    steps:
      - name: Setup Python "3.10.8"
        uses: actions/setup-python@v4
        with:
          python-version: "3.10.8"

      - name: Upgrading PIP
        run: |
          python -m pip install --upgrade pip

      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-create: true
          virtualenvs-in-project: false
          installer-parallel: true

      - name: Install Dependencies
        run: |
          poetry install

#      - name: Semantic Release
#        run: |
#          git config user.name github-actions
#          git config user.email github-actions@github.com
#          poetry run semantic-release publish

      - name: Python Semantic Release
        uses: relekang/python-semantic-release@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          repository_username: __token__
          repository_password: ${{ secrets.PYPI_TOKEN }}